//------------------------------------------------------------------------
//
//  SSL Switcher for MODX
//
//  Author  : soushi
//  Version : 2.00
//  Date    : 2012/2/19
//
//------------------------------------------------------------------------

// http/https状態の確認
$onSSL = $modx->Event->getGlobalVariable('conf_sslsw_https');
if( $onSSL === false ){
  $onSSL='off';
  $sslKeys=array('HTTPS','X-HTTPS','HTTP_X_HTTPS');
  foreach( $sslKeys as $key ){
    if( isset($_SERVER[$key]) && $_SERVER[$key] != 'off' ){
      $onSSL='on';
    }
  }
  if( isset($httpsKey) && !empty($httpsKey)
      && isset($httpsVal) && !empty($httpsVal)){
    if( isset($_SERVER[$httpsKey]) && $_SERVER[$httpsKey] == $httpsVal ){
      $onSSL='on';
    }
  }
  $modx->Event->setGlobalVariable('conf_sslsw_https',$onSSL);
}
//$modx->logEvent(1, 1, 'on SSL:'.$onSSL, '[SSL SW Debug]'.$modx->Event->name);

switch ($modx->Event->name){
 case 'OnWebPageInit':
   $id = $modx->documentIdentifier;
   $tv = $modx->getTemplateVarOutput('SSLSwitcher',$id);
   if( strpos($tv['SSLSwitcher'],'自動リダイレクト禁止') === false ){
     $redirect=false;
     if( $onSSL == 'off' && strpos($tv['SSLSwitcher'],'HTTPS利用') !== false ){
       $redirect='s';
     }
     if( $onSSL == 'on' && strpos($tv['SSLSwitcher'],'HTTPS利用') === false ){
       $redirect='p';
     }
     if( $redirect != false ){
       $arg= '';
       foreach($_GET as $key => $val){
	 if( $key == 'q' || $key == 'id' ) continue;
	 $arg .= '&'.urlencode($key).'='.urlencode($val);
       }
       $url = $modx->makeUrl($id,'',$arg,'full');
       if( $redirect == 's' ){
	 $url = preg_replace('/^http:\/\//','https://',$url);
       }else{
	 $url = preg_replace('/^https:\/\//','http://',$url);
       }
       header('HTTP/1.0 301 Moved Permanently');
       header('Location:'.$url);
       exit();
       //仕様が変わりそうなのでとりあえず利用しない
       //$modx->sendRedirect($url, 0, 'REDIRECT_HEADER', '301');
     }
   }
   break;

 case 'OnWebPagePrerender':
   //<base>タグ書き換え
   if( $rewriteBaseTag == 'true' ){
     if( $onSSL == 'on' ){
       $modx->documentOutput = preg_replace('/(<base +href=[\'"]http):/i','${1}s:',$modx->documentOutput);
     }else{
       $modx->documentOutput = preg_replace('/(<base +href=[\'"]http)s:/i','${1}:',$modx->documentOutput);
     }
   }
   break;

 case 'OnMakeUrl':
   //URL書き換え
   if( $makeURLwithSSL != 'true' ){break;}
   $tv = $modx->getTemplateVarOutput('SSLSwitcher',$id); //$idはmakeUrlで指定したid
   $tv1 = $modx->getTemplateVarOutput('sslSwitcher',$id,0);
   $tv2 = $modx->getTemplateVarOutput('sslSwitcher',$id,1);
   if( strpos($tv1['sslSwitcher'].$tv2['SSLSwitcher'],'HTTPS利用') !== false ){
     $toSSL='on';
   }else{
     $toSSL='off';
   }
   if( $onSSL != $toSSL ){ // https -> http
     if( $scheme != 'full' ){
       $url = $modx->config['site_url'].preg_replace('/^\//','',$url);
     }
     if( $onSSL='on' ){ // https -> http
       $url = preg_replace('/^https:\/\//','http://',$url);
     }else{ // http -> https
       $url = preg_replace('/^http:\/\//','https://',$url);
     }
     $modx->event->output($url);
   }

   break;
   
}
